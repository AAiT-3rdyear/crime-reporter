// Mocks generated by Mockito 5.2.0 from annotations
// in crime_reporter/test/user_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i3;
import 'package:logger/logger.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

import 'user_repository_test.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeLogger_0 extends _i1.Fake implements _i2.Logger {}

class _FakeFlutterSecureStorage_1 extends _i1.Fake
    implements _i3.FlutterSecureStorage {}

/// A class which mocks [UserRepoTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepoTest extends _i1.Mock implements _i4.UserRepoTest {
  MockUserRepoTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl =>
      (super.noSuchMethod(Invocation.getter(#baseUrl), returnValue: '')
          as String);
  @override
  set baseUrl(String? _baseUrl) =>
      super.noSuchMethod(Invocation.setter(#baseUrl, _baseUrl),
          returnValueForMissingStub: null);
  @override
  _i2.Logger get logger => (super.noSuchMethod(Invocation.getter(#logger),
      returnValue: _FakeLogger_0()) as _i2.Logger);
  @override
  set logger(_i2.Logger? _logger) =>
      super.noSuchMethod(Invocation.setter(#logger, _logger),
          returnValueForMissingStub: null);
  @override
  _i3.FlutterSecureStorage get storage => (super.noSuchMethod(
      Invocation.getter(#storage),
      returnValue: _FakeFlutterSecureStorage_1()) as _i3.FlutterSecureStorage);
  @override
  _i5.Future<dynamic> getUser(dynamic username, dynamic password) =>
      (super.noSuchMethod(Invocation.method(#getUser, [username, password]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> signUpUser(Map<String, dynamic>? body) =>
      (super.noSuchMethod(Invocation.method(#signUpUser, [body]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> getSampleCrime() =>
      (super.noSuchMethod(Invocation.method(#getSampleCrime, []),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> getStations() =>
      (super.noSuchMethod(Invocation.method(#getStations, []),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> postImage(String? filepath) =>
      (super.noSuchMethod(Invocation.method(#postImage, [filepath]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> reportCrime(Map<String, dynamic>? body) =>
      (super.noSuchMethod(Invocation.method(#reportCrime, [body]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> getMyReport(String? user) =>
      (super.noSuchMethod(Invocation.method(#getMyReport, [user]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> updateProfileImage(String? filepath, String? email) =>
      (super.noSuchMethod(
          Invocation.method(#updateProfileImage, [filepath, email]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> updateProfile(
          dynamic email, dynamic phoneNo, dynamic password, dynamic fullname) =>
      (super.noSuchMethod(
          Invocation.method(
              #updateProfile, [email, phoneNo, password, fullname]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> deleteReported(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#deleteReported, [id]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
}
